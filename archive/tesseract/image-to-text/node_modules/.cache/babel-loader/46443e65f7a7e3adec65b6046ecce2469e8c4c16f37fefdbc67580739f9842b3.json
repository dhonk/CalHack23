{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddani\\\\Documents\\\\calhacks23\\\\CalHack23\\\\dev\\\\tesseract\\\\image-to-text\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imagePath, setImagePath] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const filetypes = ['image/jpeg', 'image/png'];\n  const peedeeef = ['application/pdf'];\n  const handleChange = event => {\n    setImagePath(\"\");\n    setText(\"\");\n    setSelectedFile(\"\");\n    setMessage(\"\");\n    const file = event.target.files[0];\n    if (file) {\n      if (peedeeef.includes(file.type)) {\n        setSelectedFile(file);\n      } else if (filetypes.includes(file.type)) {} else {\n        setSelectedFile(null);\n        setImagePath(null);\n      }\n    }\n  };\n  const handleClick = () => {\n    if (text !== \"Is already PDF\") {\n      console.log(text);\n      setText(text);\n    } else {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Actual imagePath uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePath,\n        className: \"App-image\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Extracted text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-box\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", text, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        style: {\n          height: 50\n        },\n        children: \" convert to text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1say6si0sMazeGJX7eEegB5AQjU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","imagePath","setImagePath","text","setText","selectedFile","setSelectedFile","message","setMessage","filetypes","peedeeef","handleChange","event","file","target","files","includes","type","handleClick","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onChange","onClick","style","height","_c","$RefreshReg$"],"sources":["C:/Users/ddani/Documents/calhacks23/CalHack23/dev/tesseract/image-to-text/src/App.js"],"sourcesContent":["import { useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [imagePath, setImagePath] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const filetypes = ['image/jpeg', 'image/png'];\r\n  const peedeeef = ['application/pdf'];\r\n\r\n  const handleChange = (event) => {\r\n    setImagePath(\"\");\r\n    setText(\"\");\r\n    setSelectedFile(\"\");\r\n    setMessage(\"\");\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      if (peedeeef.includes(file.type)) {\r\n        setSelectedFile(file);\r\n      } else if (filetypes.includes(file.type)) {\r\n\r\n      } else {\r\n        setSelectedFile(null);\r\n        setImagePath(null);  \r\n      }\r\n    }\r\n  }\r\n\r\n  const handleClick = () => {\r\n    if (text !== \"Is already PDF\") {\r\n        console.log(text);\r\n        setText(text);\r\n    } else {\r\n\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <main className=\"App-main\">\r\n        <h3>Actual imagePath uploaded</h3>\r\n        <img \r\n           src={imagePath} className=\"App-image\" alt=\"logo\"/>\r\n        \r\n          <h3>Extracted text</h3>\r\n        <div className=\"text-box\">\r\n          <p> {text} </p>\r\n        </div>\r\n        <input type=\"file\" onChange={handleChange} />\r\n        <button onClick={handleClick} style={{height:50}}> convert to text</button>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}